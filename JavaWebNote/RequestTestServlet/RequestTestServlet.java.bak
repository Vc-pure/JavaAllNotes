package com.bjpowernode.javaweb.servlet;

import javax.servlet.http.*;
import java.io.*;
import javax.servlet.*;
import java.util.Map;
import java.util.*;
/*
username=zhangsan&userpwd=123&interest=s&interest=d&interest=tt
Map<String,String[]>
    key存储String
    value存储String[]
    key				value
    ----------------------
    username		{"abc"}
	userpwd			{"111"}
	interest		{"s","d","tt"}
*/
public class RequestTestServlet extends HttpServlet{
	public void doPost(HttpServletRequest request,HttpServletResponse response)
		throws IOException,ServletException{
		//面向接口编程：HttpServletRequest接口。
		//获取前端提交的数据
		//前端会提交什么数据呢？
		//username=zhangsan&userpwd=123&interest=s&interest=d&interest=tt
		//以上的数据会被小猫咪封装到request对象中

		//获取参数Map集合
		Map<String,String[]> parameterMap=request.getParameterMap();
		//遍历Map集合
		//最基本的方式：获取Map集合中所有的key，遍历
		Set<String> keys=parameterMap.keySet();
		Iterator<String> it =keys.iterator();
		while(it.hasNext()){
			String key=it.next();
			//System.out.println(key);
			//通过key获取value
			String[] values=parameterMap.get(key);
			/*
			username=[Ljava.lang.String;@107e6128
			userpwd=[Ljava.lang.String;@237ea34b
			interest=[Ljava.lang.String;@61e092fa
			*/
			//System.out.println(key +"="+  values);
			
			//遍历一维数组
			System.out.print(key+ "=");
			for(String value:values){
				System.out.print(value+",");
			}

			//换行
			System.out.println();
		}

		//除了以上方法之外，我们还可以直接通过getParameterNames()这个方法直接获取这个Map集合的所有key
		Enumeration<String> names=request.getParameterNames(); 
		while(names.hasMoreElements()){
			String name=names.nextElement();
			System.out.println(name);
		}

		//直接通过name获取value这个一维数组
		String[] usernames=request.getParameterValues("username");
		String[] userpwds=request.getParameterValues("userpwd");
		String[] interests=request.getParameterValues("interest");
		//遍历一维数组
		for(String username:usernames){
			System.out.println(username);
		}
		for(String userpwd:userpwds){
			System.out.println(userpwd);
		}
		for(String interest:interests){
			System.out.println(interest);
		}


		//通过name获取value这个一维数组的第一个元素
		//这个方法使用最多，因为这个一维数组中一般只有一个元素
		String username= request.getParameter("username");
		String userpwd=request.getParameter("userpwd");
		//String interest=request.getParameter("interest");
		
		//既然是checkbox，那我们就不能用getParameter（"interest"）了，应该用getParameterValues("interest")
		String[] interests2=request.getParameterValues("interest");
		//对interests这个一维数组进行遍历
		for(String interest:interests){
			System.out.println(interest);
		}

		//获取的都是一维数组当中的第一个元素
		System.out.println(username);
		System.out.println(userpwd);
		//System.out.println(interest);



	}
}